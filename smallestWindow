#include <bits/stdc++.h>
#include<iostream>
#include<string>
using namespace std;

string findSubString(string str, string pat)
{

   int left = 0;
   int right = str.length() -1;
   int i = 0, j = 0;
   int minlength = str.length();
   int count = pat.length();
   bool found = true;

   if(str.empty() || pat.empty())
	   return "";

   map<char,int> hash_map;
   for(int temp = 0; temp < pat.length(); temp++)
   {
	   if(hash_map.find(pat[temp]) == hash_map.end()) hash_map[pat[temp]] = 1;
	   else hash_map.at(pat[temp])++;
   }


   while( j < str.length())
   {
	  if(hash_map.find(str[j]) != hash_map.end())
	  {
		  hash_map.at(str[j]) = hash_map.at(str[j]) - 1;
		  cout<<"value of "<< str[j] <<" inside loop is "<<hash_map.at(str[j])<<endl;
		  if( hash_map.at(str[j]) >= 0) count--;
		  cout<<"value of count is "<<count<<endl;
	  }
      j++;
	  if(count > 0) continue;

	  //removing the unwanted character
	  while(count == 0)
	  {
		  if(hash_map.find(str[++i]) != hash_map.end())
		 	  {
		 		  hash_map.at(str[i])++;
		 		  if( hash_map.at(str[i]) > 0) count++;
		 	  }
		  cout<<"i value inside loop "<<i<<endl;
	  }


	  if(j - i < minlength)
	  {
		  left = i;
		  right = j;
		  minlength = j - 1;
		  found = true;
	  }

   }
   cout<<"value of i "<< i << "value of j "<<j<<endl;


 return "";
}

// Driver code
int main()
{
    string str = "ADOBECODEBANC";
    string pat = "ABC";

    cout << "Smallest window is : \n" << findSubString(str, pat);
    return 0;
}
